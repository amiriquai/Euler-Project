Q1.

a=[]
for i in range(0,1000):
    if (i%3==0 or i%5==0):
        x = a.append(i)

sum(a)


Q2. 


a=[1,2]
a=[1,2]

for i in range(1,100):
    b = a[i]+a[i-1]
    a.append(b)
    

c=[]
for i in range(1,100):
    if (a[i]%2 == 0):
        c.append(a[i])


sum([i for i in c if i < 4000000])

Q3. 
a=[]
A=600851475143
for i in range(2,A-1):
    if A%i == 0:
        #print(i)
        a.append(i)


c=[]
for i in range(0,len(a)):
    for j in range (2, (a[i]-1)):
        if (a[i]%j == 0): #& a[i] not in c:
            if a[i] not in c:
                 c.append(a[i])
#print(c)
x=[]
#print(c)
for i in range(0,len(a)):
    if a[i] not in c:
        x.append(a[i])
        
print(max(x))

Q4.

a=[]
for i in range (100,999):
    for j in range (100,999):
        a==a.append(i*j)

b=[]
for f in range (0,len(a)):
    for k in range (0,len(str(a[f]))): 
            if int((str(a[f])[len(str(a[f]))-1-k]))-int((str(a[f])[k])) != 0: 
                break
    else:
                b==b.append(a[f])
print(max(b))

Q5.

m=[]
for n in range (2,1000000000):
    for i in (2,5,7,8,9,11,13,17,19):
        if n%i!=0:
            break
    else:
        m==m.append(n)
            

print(min(m))

Q6.

def sum_of_square(a):
    b=[]
    i=0
    while i <= a:
        i**2
        b.append(i**2)
        i+=1
    return sum(b)


def square_of_sum(c):
    d=[]
    j=0
    while j <= c:
        d.append(j)
        j+=1
    return (sum(d))**2

square_of_sum(100)-sum_of_square(100)

Q7


A=1000000
c=[]
for i in range(2,A):
    for j in range (2, (i-1)):
        if (i%j == 0): 
            if i not in c:
                c.append(i)

x=[]
for i in range(2,A):
    if i not in c:
        x.append(i)
        
print(x[10000])


Q8

a=[]
B =str(7316717653133062491922511967442657474235534919493496983520312774506326239578318016984801869478851843858615607891129494954595017379583319528532088055111254069874715852386305071569329096329522744304355766896648950445244523161731856403098711121722383113622298934233803081353362766142828064444866452387493035890729629049156044077239071381051585930796086670172427121883998797908792274921901699720888093776657273330010533678812202354218097512545405947522435258490771167055601360483958644670632441572215539753697817977846174064955149290862569321978468622482839722413756570560574902614079729686524145351004748216637048440319989000889524345065854122758866688116427171479924442928230863465674813919123162824586178664583591245665294765456828489128831426076900422421902267105562632111110937054421750694165896040807198403850962455444362981230987879927244284909188845801561660979191338754992005240636899125607176060588611646710940507754100225698315520005593572972571636269561882670428252483600823257530420752963450)
for i in range (0,987):
    c = int(B[i])*int(B[i+1])*int(B[i+2])*int(B[i+3])*int(B[i+4])*int(B[i+5])*int(B[i+6])*int(B[i+7])*int(B[i+8])*int(B[i+9])*int(B[i+10])*int(B[i+11])*int(B[i+12])
    D = a.append(c)  

    print(max(a))

Q9

for a in range (1,1000):
    for b in range (1,1000):
        if a**2 + b**2 ==(1000-a-b)**2:
            print(a*b*(1000-a-b))

Q10



Q11

grid = "08 02 22 97 38 15 00 40 00 75 04 05 07 78 52 12 50 77 91 08 \
49 49 99 40 17 81 18 57 60 87 17 40 98 43 69 48 04 56 62 00 \
81 49 31 73 55 79 14 29 93 71 40 67 53 88 30 03 49 13 36 65 \
52 70 95 23 04 60 11 42 69 24 68 56 01 32 56 71 37 02 36 91 \
22 31 16 71 51 67 63 89 41 92 36 54 22 40 40 28 66 33 13 80 \
24 47 32 60 99 03 45 02 44 75 33 53 78 36 84 20 35 17 12 50 \
32 98 81 28 64 23 67 10 26 38 40 67 59 54 70 66 18 38 64 70 \
67 26 20 68 02 62 12 20 95 63 94 39 63 08 40 91 66 49 94 21 \
24 55 58 05 66 73 99 26 97 17 78 78 96 83 14 88 34 89 63 72 \
21 36 23 09 75 00 76 44 20 45 35 14 00 61 33 97 34 31 33 95 \
78 17 53 28 22 75 31 67 15 94 03 80 04 62 16 14 09 53 56 92 \
16 39 05 42 96 35 31 47 55 58 88 24 00 17 54 24 36 29 85 57 \
86 56 00 48 35 71 89 07 05 44 44 37 44 60 21 58 51 54 17 58 \
19 80 81 68 05 94 47 69 28 73 92 13 86 52 17 77 04 89 55 40 \
04 52 08 83 97 35 99 16 07 97 57 32 16 26 26 79 33 27 98 66 \
88 36 68 87 57 62 20 72 03 46 33 67 46 55 12 32 63 93 53 69 \
04 42 16 73 38 25 39 11 24 94 72 18 08 46 29 32 40 62 76 36 \
20 69 36 41 72 30 23 88 34 62 99 69 82 67 59 85 74 04 36 16 \
20 73 35 29 78 31 90 01 74 31 49 71 48 86 81 16 23 57 05 54 \
01 70 54 71 83 51 54 69 16 92 33 48 61 43 52 01 89 19 67 48"
grid = [int(i) for i in grid.split()]
produits = []

A=[]
c=[]
b=[]
d=[]
e=[]
for i in range (0,397):
    if 17<i%20<20:
        c.append(0)
    else:
        c.append(grid[i]*(grid[i+1])*(grid[i+2])*(grid[i+3]))
A.append(max(c))
for i in range (0,340):
      b.append(grid[i]*(grid[i+20])*(grid[i+40])*(grid[i+60]))
A.append(max(b))
for i in range (0,337):
    if 17<i%20<20:
        d.append(0)
    else:
        d.append(grid[i]*(grid[i+21])*(grid[i+42])*(grid[i+63]))
A.append(max(d))
for i in range (0,343):
    if 0<i%20 <3 :
        e.append(0)
    else:
        e.append(grid[i]*(grid[i+19])*(grid[i+38])*(grid[i+57]))
A.append(max(e))
print((max(A)))
